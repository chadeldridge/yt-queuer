const resLogSize=4,menuItemIconClass=newClassList(["material-symbols-outlined","text-lg","mr-1","text-neutral-100"]),menuItemClass=newClassList("block flex flex-row w-full whitespace-nowrap items-center px-4 py-2 leading-5 cursor-pointer bg-neutral-800 text-neutral-100 hover:bg-neutral-700 focus:outline-none focus:bg-neutral-500 focus:text-neutral-900".split(" "));let resLog=[];
function printResLog(){let a="<div class='flex flex-col pl-3 pt-2 text-sm'>";for(let b=0;b<resLog.length;b++){let c="";resLog.length-1==b&&(c=' class="text-neutral-100"');a+=`<span${c}>${resLog[b]}</span>`}resultsDiv.innerHTML=a+"</div>"}function addResLog(a){resLog.push(a);resLog.length>resLogSize&&resLog.shift();printResLog()}function log(a){console.log(a);addResLog(a)}
function handleFailure(a,b){b.response?(console.log(b.response),a=`${a}: (${b.response.status})`,b.response.data&&b.response.data.message&&(a+=` ${b.response.data.message}`),log(a)):b.request?log(`${a}: No response received`):log(`${a}: ${b.message}`)}function setCookie(a,b){var c=new Date;c.setTime(c.getTime()+31536E6);c="expires="+c.toUTCString();b=JSON.stringify(b);document.cookie=`${a}=${b}; ${c}; path=/; SameSite=None; secure`}
function getCookie(a){(a=document.cookie.match(new RegExp(a+"=([^;]+)")))&&(a=JSON.parse(a[1]));return a}function deleteCookie(a){document.cookie=`${a}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; SameSite=None; secure`}function newElement(a,b,c){let d=document.createElement(a);b&&(Array.isArray(b)?b.forEach(e=>{d.classList.add(e)}):"string"===typeof b?d.classList.add(b):d.classList=b);c&&(d=addElements(d,c));return d}
function addElements(a,b){Array.isArray(b)?b.forEach(c=>{a.appendChild(c)}):"string"===typeof b?a.innerHTML+=b:a.appendChild(b);return a}function newClassList(a){const b=document.createElement("div");a&&0<a.length&&a.forEach(c=>{b.classList.add(c)});return b.classList}function toggleHidden(a){a.classList.toggle("hidden")}function showElement(a){a.classList.contains("hidden")&&a.classList.remove("hidden")}function hideElement(a){a.classList.contains("hidden")||a.classList.add("hidden")};const PLAYLIST_RETRY=1E4,COOKIE_NAME="ytqueuer-controller",pbcMenu=document.getElementById("pbcs"),selectedPBC=document.getElementById("selectedPBC"),resultsDiv=document.getElementById("results"),playlistDiv=document.getElementById("playlist"),powerSettingsMenu=document.getElementById("powerSettingsMenu"),powerSettingsDiv=document.getElementById("powerSettings"),powerSettingsDetails=document.getElementById("powerSettingsDetails"),cecSettingsForm=document.getElementById("cecSettings"),wolConfigDiv=
document.getElementById("wolConfig"),wolSettingsForm=document.getElementById("wolSettings"),psdCECTab=document.getElementById("psdCECTab"),psdWOLTab=document.getElementById("psdWOLTab");let psdActive="",psdActiveTab="",currentPlaylist="",resultsCountdown="",resultsTimeoutDiv="",powerSettinsMenuOpen=!1,wol="",cec="",waitingForPlaylists=!1,playlists=[],playlist=[];function retryPlaylistsWatcher(){waitingForPlaylists=!1;playlistsWatcher()}
const playlistsWatcher=async()=>{try{waitingForPlaylists||(playlists=await getPlaybackClients(),null===playlists?log("Failed to get playlists."):(fillPlaylists(),null!==currentPlaylist&&""!==currentPlaylist&&getPlaylist()))}catch(a){handleFailure("Failed to get playlists",a)}finally{window.setTimeout(retryPlaylistsWatcher,PLAYLIST_RETRY)}},getClipboardData=async()=>{try{const a=await navigator.clipboard.readText();if(!a.includes("youtube.com/watch?v="))throw Error("Invalid URL in clipboard.");id=
a.split("v=")[1];return a.includes("&")?(parts=id.split("&"),parts[0]):id}catch(a){log(`Failed to get data from clipboard: '${a}'`)}},getPlaybackClients=async()=>{try{const a=await axios.get("/pbcs");let b=[];""!=a.data&&(b=a.data);return b}catch(a){return handleFailure("Failed to get available playlists",a),null}},getPlaylist=async()=>{try{const a=await axios.get("/playlists/"+currentPlaylist.id);200!==a.status&&204!==a.status?log(`Failed to get playlists: (${a.status}) ${a.data.message}`):showPlaylist(a.data)}catch(a){handleFailure(`Failed to get playlist for '${currentPlaylist.name}'`,
a)}};function IsPlaylistSelected(){return null===currentPlaylist||""===currentPlaylist||"{}"===currentPlaylist?(log("You must select a playlist first."),!1):!0}
const addVideo=async()=>{try{if(IsPlaylistSelected()){var a=await getClipboardData();if(a){var b=await axios.post(`/playlists/${currentPlaylist.id}/${a}`);log(b.data.message);getPlaylist()}}}catch(c){handleFailure("Failed to add video to playlist",c)}},addNext=async()=>{try{if(IsPlaylistSelected()){var a=await getClipboardData();if(a){var b=await axios.post(`/playlists/${currentPlaylist.id}/${a}/next`);log(b.data.message);getPlaylist()}}}catch(c){handleFailure("Failed to add video to top of playlist",
c)}},removeVideo=async a=>{try{if(IsPlaylistSelected()){var b=await axios.delete(`/playlists/${currentPlaylist.id}/${a}`);204!==b.status?log("failed to remove video:"+b.data.message):(log("video removed"),getPlaylist())}}catch(c){handleFailure("Failed to remove video from playlist",c)}},clearPlaylist=async()=>{try{if(IsPlaylistSelected()){var a=await axios.delete("/playlists/"+currentPlaylist.id);204!==a.status?log("failed to clear playlist:"+a.data.message):(log("playlist cleared"),showPlaylist())}}catch(b){handleFailure("Failed to clear playlist",
b)}};function playlistSelected(){return null===currentPlaylist||""===currentPlaylist||""===currentPlaylist.id?!1:!0}function showPlaylist(a){playlistDiv.innerHTML="";if(a&&""!==a&&0!==a.length){var b=newElement("ul",["pt-3","bg-neutral-600","rounded-xl"]);a.forEach(c=>{b.innerHTML+=`<li>
        <div class="flex flex-row justify-between items-center pb-3">
                <div class="flex flex-row">
                        <div><img src="${c.thumbnail_url}" style="width:120px;height:90px"></div>
                        <div class="flex flex-col pl-6">
                                <div>${c.title}</div>
                                <div>${c.author_name}</div>
                        </div>
                </div>
                <div><button type="button" class="material-symbols-outlined text-5xl p-3 pl-6 hover:text-secondary-base" title="Remove Video" onClick="removeVideo('${c.video_id}')">playlist_remove</button></div>
        </div>
</li>`});playlistDiv.appendChild(b)}else playlistDiv.appendChild(newElement("div","w-full h-full text-center content-center font-bold text-4xl text-neutral-700".split(" "),"Playlist Empty"))}
function fillPlaylists(){pbcMenu.innerHTML="";if(0===playlists.length)selectedPBC.innerHTML="No Playback Clients Available",currentPlaylist="";else{if(null===currentPlaylist||""===currentPlaylist)selectedPBC.innerHTML="Select a Playlist",currentPlaylist="";for(let a=0;a<playlists.length;a++){let b=newElement("li",menuItemClass,newElement("span",null,playlists[a].name));b.value=a;1===playlists.length?b.classList.add("rounded-xl"):0===a?b.classList.add("rounded-t-xl"):a===playlists.length-1&&b.classList.add("rounded-b-xl");
pbcMenu.appendChild(b)}}}function selectPBC(a){value=a.target.value;value>=playlists.length?log("Invalid playlist selected."):(currentPlaylist=playlists[value],selectedPBC.innerHTML=currentPlaylist.name,setCookie(COOKIE_NAME,currentPlaylist),getPlaylist(),updatePowerSettingsMenu())}
function psdTabSelect(a){""!==psdActiveTab&&(psdActiveTab.classList.remove("bg-neutral-700"),psdActiveTab.classList.add("bg-neutral-800"));psdActiveTab=a;a.classList.remove("bg-neutral-800");a.classList.add("bg-neutral-700")}function deletePowerSettings(a){hidePowerSettings();"wol"===a?deleteWOL():"cec"===a&&deleteCEC();updatePowerSettingsMenu()}
function switchPowerSettings(a,b){psdTabSelect(b);""!==psdActive&&hideElement(psdActive);powerSettingsDetails.innerHTML="";showElement(a);powerSettingsDetails.appendChild(a);psdActive=a}function showPowerSettings(){!1===playlistSelected()?log("You must select a playlist first."):(powerSettinsMenuOpen=!0,showElement(powerSettingsDiv))}function hidePowerSettings(){powerSettinsMenuOpen=!1;hideElement(powerSettingsDiv)}
const updatePowerSettingsMenu=async()=>{if(null===currentPlaylist||""===currentPlaylist)log("You must select a playlist first."),hideElement(powerSettingsMenu);else{await getCEC();updateCECSettings();await getWOL();updateWOLSettings();powerSettingsMenu.innerHTML="";if(null!==wol&&""!==wol){var a=newElement("span",menuItemIconClass,"lan");a=newElement("li",menuItemClass,[a,newElement("span",null,wol.alias)]);a.onmousedown=function(){wolWake()};powerSettingsMenu.appendChild(a)}if(null!==cec&&""!==cec){a=
document.createElement("span");a.classList.add("material-symbols-outlined","text-lg","mr-1","text-neutral-100");a.innerHTML="settings_input_hdmi";var b=newElement("li",menuItemClass,[a.cloneNode(!0),newElement("span",null,"Power Status")]);b.onmousedown=function(){cecPowerStatus()};powerSettingsMenu.appendChild(b);b=newElement("li",menuItemClass,[a.cloneNode(!0),newElement("span",null,"Power On")]);b.onmousedown=function(){cecPowerOn()};powerSettingsMenu.appendChild(b);a=newElement("li",menuItemClass,
[a.cloneNode(!0),newElement("span",null,"Power Off")]);a.onmousedown=function(){cecPowerOff()};powerSettingsMenu.appendChild(a)}a=document.createElement("li");a.classList=menuItemClass;a.onmousedown=function(){showPowerSettings()};a.innerHTML="Edit Power Settings";powerSettingsMenu.appendChild(a)}},updateCECSettings=async()=>{powerSettinsMenuOpen||(null===cec||""===cec?(cecSettingsForm.alias.value="",cecSettingsForm.device.value="",cecSettingsForm.logical_addr.value="",cecSettingsForm.physical_addr.value=
""):(cecSettingsForm.alias.value=cec.alias,cecSettingsForm.device.value=cec.device,cecSettingsForm.logical_addr.value=cec.logical_addr,cecSettingsForm.physical_addr.value=cec.physical_addr))},updateWOLSettings=async()=>{powerSettinsMenuOpen||(null===wol||""===wol?(wolSettingsForm.alias.value="",wolSettingsForm.iface.value="",wolSettingsForm.mac.value="",wolSettingsForm.port.value=""):(wolSettingsForm.alias.value=wol.alias,wolSettingsForm.iface.value=wol.iface,wolSettingsForm.mac.value=wol.mac,wolSettingsForm.port.value=
wol.port))},createWOL=async a=>{try{uri=`/wol/${currentPlaylist.id}?alias=${a.alias}&iface=${a.iface}&mac=${a.mac}&port=${a.port}`;const b=await axios.post(uri);201!==b.status&&log("failed to create WOL:"+b.data.message);return b.status}catch(b){handleFailure("Failed to create Wake On LAN",b)}},getWOL=async()=>{try{const a=await axios.get(`/wol/${currentPlaylist.id}`);200===a.status&&(wol=a.data)}catch(a){handleFailure("Failed to get Wake On LAN",a)}},updateWOL=async a=>{try{uri=`/wol/${currentPlaylist.id}?alias=${a.alias}&iface=${a.iface}&mac=${a.mac}&port=${a.port}`;
const b=await axios.put(uri);200!==b.status&&log("failed to update WOL:"+b.data.message);return b.status}catch(b){handleFailure("Failed to update Wake On LAN",b)}},deleteWOL=async()=>{try{const a=await axios.delete("/wol/"+currentPlaylist.id);204!==a.status?log("failed to delete WOL:"+a.data.message):updatePowerSettingsMenu()}catch(a){handleFailure("Failed to delete Wake On LAN",a)}},wolWake=async()=>{try{log(`Requesting Wake On Lan for ${currentPlaylist.name}...`);const a=await axios.post(`/wol/${currentPlaylist.id}/wake`);
200!==a.status?log("failed to send WOL:"+a.data.message):log(`Wake On Lan sent to ${currentPlaylist.name}.`)}catch(a){handleFailure("Failed to send Wake On LAN",a)}},createCEC=async a=>{try{uri=`/cec/${currentPlaylist.id}?alias=${a.alias}&device=${a.device}&logical_addr=${a.logical_addr}&physical_addr=${a.physical_addr}`;const b=await axios.post(uri);201!==b.status&&log("failed to create CEC:"+b.data.message);cec=b.data;return b.status}catch(b){handleFailure("Failed to create CEC",b)}},getCEC=async()=>
{try{const a=await axios.get(`/cec/${currentPlaylist.id}`);200===a.status&&(cec=a.data)}catch(a){handleFailure("Failed to get CEC",a)}},updateCEC=async a=>{try{uri=`/cec/${currentPlaylist.id}?alias=${a.alias}&device=${a.device}&logical_addr=${a.logical_addr}&physical_addr=${a.physical_addr}`;const b=await axios.put(uri);200!==b.status&&log("failed to update CEC:"+b.data.message);return b.status}catch(b){handleFailure("Failed to update CEC",b)}},deleteCEC=async()=>{try{const a=await axios.delete("/cec/"+
currentPlaylist.id);204!==a.status&&log("failed to delete CEC:"+a.data.message)}catch(a){handleFailure("Failed to delete CEC",a)}},cecPowerOn=async()=>{try{log(`Requesting CEC Power On for ${currentPlaylist.name}...`);const a=await axios.post(`/cec/${currentPlaylist.id}/power/on`);200!==a.status?log("failed to send CEC Power On:"+a.data.message):log(`CEC Power On sent to ${currentPlaylist.name}.`)}catch(a){handleFailure("Failed to send CEC Power On",a)}},cecPowerOff=async()=>{try{log(`Requesting CEC Power Off for ${currentPlaylist.name}...`);
const a=await axios.post(`/cec/${currentPlaylist.id}/power/off`);200!==a.status?log("failed to send CEC Power Off:"+a.data.message):log(`CEC Power Off sent to ${currentPlaylist.name}.`)}catch(a){handleFailure("Failed to send CEC Power Off",a)}},cecPowerStatus=async()=>{try{log(`Requesting CEC Power Status for ${currentPlaylist.name}...`);const a=await axios.get(`/cec/${currentPlaylist.id}/power/status`);200!==a.status?log("failed to get CEC Power Status:"+a.data.message):log(`CEC Power Status for ${currentPlaylist.name}: ${a.data.power}`)}catch(a){handleFailure("Failed to get CEC Power Status",
a)}};pbcMenu.addEventListener("mousedown",async a=>{selectPBC(a)});cecSettingsForm.addEventListener("submit",async a=>{a.preventDefault();a=new FormData(cecSettingsForm);a=Object.fromEntries(a.entries());hidePowerSettings();if(null===a||0===a.length)log("No CEC settings provided. Form was empty.");else{if(null===cec||""===cec){if(201!==await createCEC(a))return}else if(200!==await updateCEC(a))return;updatePowerSettingsMenu()}});
wolSettingsForm.addEventListener("submit",async a=>{a.preventDefault();a=new FormData(wolSettingsForm);a=Object.fromEntries(a.entries());hidePowerSettings();if(null===wol||""===wol){if(201!==await createWOL(a))return}else if(200!==await updateWOL(a))return;updatePowerSettingsMenu()});
const startup=async()=>{currentPlaylist=getCookie(COOKIE_NAME);if(null!==currentPlaylist&&""!==currentPlaylist){pbcMenu.value=currentPlaylist.id;await getPlaylist();if(null===playlists||""===playlists||0===playlists.length)currentPlaylist="";updatePowerSettingsMenu()}};switchPowerSettings(cecSettingsForm,psdCECTab);startup();playlistsWatcher();
